import 'package:flutter/material.dart';
import 'package:flutter_inappwebview/flutter_inappwebview.dart';
import 'package:project_name/local_storage/boxes.dart';

// ignore: must_be_immutable
class WebViewScreen extends StatefulWidget {
  String report_url;
  String cid;
  String userId;
  String userPassword;
  WebViewScreen(
      {Key? key,
      required this.report_url,
      required this.cid,
      required this.userId,
      required this.userPassword})
      : super(key: key);

  @override
  State<WebViewScreen> createState() =>
      _WebViewScreenState();
}

class _WebViewScreenState extends State<WebViewScreen> {
  double progress = 0;
  String? deviceId = '';
  late InAppWebViewController _webViewController;
  final databox = Boxes.allData();
  @override
  void initState() {
    deviceId = databox.get("deviceId");
    // deviceBrand = prefs.getString("deviceBrand");
    // deviceModel = prefs.getString("deviceModel");

    super.initState();
  }

  @override
  Widget build(BuildContext context) {
    return WillPopScope(
      onWillPop: () async {
        if (await _webViewController.canGoBack()) {
          _webViewController.goBack();
          return false;
        } else {
          return true;
        }
      },
      child: Scaffold(
          appBar: AppBar(
            backgroundColor: const Color.fromARGB(255, 138, 201, 149),

            title: const Text('Report'),
            titleTextStyle: const TextStyle(
                color: Color.fromARGB(255, 27, 56, 34),
                fontWeight: FontWeight.w500,
                fontSize: 20),
            // centerTitle: true,
            leading: IconButton(
                onPressed: () => Navigator.pop(context),
                icon: const Icon(Icons.home)),
            // automaticallyImplyLeading: false,
          ),
          body: Stack(
            children: [
              Align(
                alignment: Alignment.center,
                child: SafeArea(
                  child: Center(
                    child: InAppWebView(
                      initialUrlRequest: URLRequest(
                          url: Uri.parse(
                              url)),
                      onWebViewCreated: (controller) {
                        _webViewController = controller;
                      },
                      onReceivedServerTrustAuthRequest:
                          (controller, challenge) async {
                        // debugPrint(challenge);
                        return ServerTrustAuthResponse(
                            action: ServerTrustAuthResponseAction.PROCEED);
                      },
                      onProgressChanged:
                          (InAppWebViewController controller, int progress) {
                        setState(() {
                          this.progress = progress / 100;
                        });
                      },
                    ),
                  ),
                ),
              ),
              Align(alignment: Alignment.topCenter, child: _buildProgressBar()),
            ],
          )),
    );
  }

  Widget _buildProgressBar() {
    if (progress != 1.0) {
      // return const CircularProgressIndicator();
// You can use LinearProgressIndicator also
      return LinearProgressIndicator(
        value: progress,
        valueColor: const AlwaysStoppedAnimation<Color>(Colors.orange),
        backgroundColor: Colors.blue,
        minHeight: 7,
      );
    }
    return Container();
  }
}
